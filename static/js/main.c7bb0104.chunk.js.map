{"version":3,"sources":["components/Form/FormTitleAnimation.module.css","components/ContactList/ListItemAnimation.module.css","components/Alert/AlertAnimation.module.css","redux/contacts/actionsContacts.js","components/Form/Form.js","components/ContactList/ContactList.js","components/SearchInput/SearchInput.js","components/Alert/Alert.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","uuidv4","addContact","createAction","name","number","payload","contact","id","deleteContact","filterContacts","showAlert","HeaderText","styled","h2","FormContact","form","Button","button","Label","label","TitleSpan","span","Form","state","onChangeValue","target","setState","value","handleSubmit","e","preventDefault","props","onAddContact","this","CSSTransition","in","appear","timeout","classNames","FormTitleAnimation","onSubmit","type","placeholder","onChange","Component","mapDispatchToProps","actionContacts","connect","ListItem","li","ContactList","contacts","onDeleteContact","TransitionGroup","map","ListItemAnimation","onClick","actionsContacts","normalizedFilter","filter","toLowerCase","items","includes","defaultProps","Input","input","onChangeSearchInput","AlertDiv","div","Alert","Container","alertNotification","setVisible","length","alert","onEntered","AlertAnimation","unmountOnExit","itemsReducer","createReducer","action","filterReducer","console","log","some","item","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7bb0104.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"FormTitleAnimation_appear__tr9hI\",\"appearActive\":\"FormTitleAnimation_appearActive__1qysg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ListItemAnimation_enter__C0WOy\",\"enterActive\":\"ListItemAnimation_enterActive__25nxu\",\"exit\":\"ListItemAnimation_exit__1PYUU\",\"exitActive\":\"ListItemAnimation_exitActive__Svfhu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"AlertAnimation_enter__3jiAc\",\"enterActive\":\"AlertAnimation_enterActive__2VvXx\",\"exit\":\"AlertAnimation_exit__1vJ45\",\"exitActive\":\"AlertAnimation_exitActive__16jVH\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { ADD, DELETE, FILTER, ALERT } from \"../constants\";\r\nuuidv4();\r\n\r\nconst addContact = createAction(\"contacts/addContact\", ({ name, number }) => ({\r\n  payload: {\r\n    contact: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contacts/deleteContact\");\r\n\r\nconst filterContacts = createAction(\"contacts/filter\");\r\n\r\nconst showAlert = createAction(\"contacts/showAlert\");\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  filterContacts,\r\n  showAlert,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport FormTitleAnimation from \"./FormTitleAnimation.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport actionContacts from \"../../redux/contacts/actionsContacts\";\r\nuuidv4();\r\n\r\nconst HeaderText = styled.h2`\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  color: blue;\r\n  font-family: sans-serif;\r\n`;\r\n\r\nconst FormContact = styled.form`\r\n  width: 400px;\r\n  height: 150px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  box-shadow: 3px 3px 5px -1px rgba(134, 133, 245, 0.77);\r\n  margin-bottom: 10px;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 150px;\r\n  border: 1px solid #4a86e0;\r\n  border-radius: 4px;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #4a86e0;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 380px;\r\n  display: flex;\r\n`;\r\n\r\nconst TitleSpan = styled.span`\r\n  display: block;\r\n  padding-right: 10px;\r\n`;\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  onChangeValue = ({ target }) => {\r\n    this.setState({ [target.name]: target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddContact({ ...this.state });\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={true}\r\n          appear\r\n          timeout={500}\r\n          classNames={FormTitleAnimation}\r\n        >\r\n          <HeaderText>Phonebook</HeaderText>\r\n        </CSSTransition>\r\n        <FormContact onSubmit={this.handleSubmit}>\r\n          <Label>\r\n            <TitleSpan>Name</TitleSpan>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your name\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.onChangeValue}\r\n            />\r\n          </Label>\r\n          <Label>\r\n            <TitleSpan>Number</TitleSpan>\r\n            <input\r\n              type=\"tel\"\r\n              placeholder=\"XXX-XX-XX\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.onChangeValue}\r\n            />\r\n          </Label>\r\n          <Button type=\"submit\">Add contact</Button>\r\n        </FormContact>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: actionContacts.addContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n\r\nForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport ListItemAnimation from \"./ListItemAnimation.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport actionCintacts from \"../../redux/contacts/actionsContacts\";\r\nimport actionsContacts from \"../../redux/contacts/actionsContacts\";\r\n\r\nconst ListItem = styled.li`\r\n  box-shadow: 3px 3px 5px -1px rgba(134, 133, 245, 0.77);\r\n  padding: 40px;\r\n  width: 400px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: 1px solid #4a86e0;\r\n  border-radius: 4px;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  height: 30px;\r\n  &:hover {\r\n    border: 1px solid #f3491b;\r\n    background-color: #f3491b;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <>\r\n      <TransitionGroup>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <CSSTransition key={id} timeout={250} classNames={ListItemAnimation}>\r\n            <ListItem>\r\n              {name} : {number}\r\n              <Button onClick={() => onDeleteContact(id)}>delete</Button>\r\n            </ListItem>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const normalizedFilter = state.contacts.filter.toLowerCase();\r\n  const filteredContacts = state.contacts.items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n  return {\r\n    contacts: filteredContacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onDeleteContact: actionsContacts.deleteContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\nContactList.defaultProps = {\r\n  name: \"Name Surname\",\r\n  number: \"000-00-00\",\r\n};\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport actionContacts from \"../../redux/contacts/actionsContacts\";\r\n\r\nconst Input = styled.input`\r\n  width: 395px;\r\n  border: 2px solid paleviolet;\r\n  margin-bottom: 20px;\r\n  height: 30px;\r\n`;\r\n\r\nconst SearchInput = ({ value, onChangeSearchInput }) => {\r\n  return (\r\n    <>\r\n      <p>Find contact by name:</p>\r\n      <Input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeSearchInput(e.target.value)}\r\n        placeholder=\"Enter name to search\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeSearchInput: actionContacts.filterContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInput);\r\n\r\nSearchInput.propTypes = {\r\n  onChangeSearchInput: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AlertDiv = styled.div`\r\n  background-color: #f3491b;\r\n  color: #fff;\r\n  height: 30px;\r\n  width: 200px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default function Alert() {\r\n  return (\r\n    <AlertDiv>\r\n      <p>Contact already exist!</p>\r\n    </AlertDiv>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Form from \"./components/Form/Form\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport SearchInput from \"./components/SearchInput/SearchInput\";\nimport Alert from \"./components/Alert/Alert\";\nimport { CSSTransition } from \"react-transition-group\";\nimport AlertAnimation from \"./components/Alert/AlertAnimation.module.css\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport actionContacts from \"./redux/contacts/actionsContacts\";\n\nconst Container = styled.div`\n  font-family: sans-serif;\n  font-size: 16px;\n`;\n\nconst App = ({ alert, alertNotification, length }) => {\n  return (\n    <Container>\n      <Form />\n      {length > 1 && <SearchInput />}\n      <ContactList />\n\n      <CSSTransition\n        in={alert}\n        onEntered={() => alertNotification()}\n        timeout={500}\n        classNames={AlertAnimation}\n        unmountOnExit\n      >\n        <Alert />\n      </CSSTransition>\n    </Container>\n  );\n};\n\n// componentDidMount() {\n//   if (localStorage.getItem(\"contacts\") !== null) {\n//     const contactsFromStorage = localStorage.getItem(\"contacts\");\n//     this.setState({ contacts: JSON.parse(contactsFromStorage) });\n//   }\n// }\n\n// componentDidUpdate(prevState) {\n//   if (prevState !== this.state) {\n//     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//   }\n// }\n\nconst mapStateToProps = (state) => {\n  const contacts = state.contacts.items.length;\n  return {\n    alert: state.contacts.alert,\n    length: contacts,\n  };\n};\nconst mapDispatchToProps = {\n  alertNotification: actionContacts.setVisible,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actionContacts from \"../contacts/actionsContacts\";\r\n\r\nconst onAddContact = (state, action) => [...state, action.payload.contact];\r\n\r\nconst onDeleteContact = (state, action) =>\r\n  state.filter((contact) => contact.id !== action.payload);\r\n\r\nconst onShowAlert = (state, action) => {\r\n  console.log(\"action\", action.payload);\r\n  if (\r\n    state.contacts.some(\r\n      (item) => item.name.toLowerCase() === action.payload.name.toLowerCase()\r\n    )\r\n  ) {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [actionContacts.addContact]: onAddContact,\r\n  [actionContacts.deleteContact]: onDeleteContact,\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [actionContacts.filterContacts]: (state, action) => action.payload,\r\n});\r\n\r\nconst alert = createReducer(false, {\r\n  [actionContacts.showAlert]: onShowAlert,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  alert,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: contactsReducer },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}